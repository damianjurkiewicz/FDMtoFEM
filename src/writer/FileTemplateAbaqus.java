package writer;

import geometry.model.Edge;
import geometry.model.InLayerJoint;
import geometry.model.InterLayerJoint;
import geometry.model.Model;
import geometry.model.Vertex;

public class FileTemplateAbaqus implements FileTemplate {

	FormatModelElementsAbaqus writer = new FormatModelElementsAbaqus();

	@Override
	public String writeFile(Model model) {
		return writeHeader() + writeVertices(model) + "*Element, type=B31, elset = edge" + "\n" + writeEdges(model)
				+ "*Element, type=B31, elset = inLayerJoint" + "\n" + writeInLayerJoints(model)
				+ "*Element, type=B31, elset = interLayerJoint" + "\n" + writeInterLayerJoints(model) + writeBottom();
	}

	private String writeHeader() {

		String head = "*Heading" + "\n" + "** Job name: Analisys Model name: FDM_Model" + "\n"
				+ "** Generated by: Abaqus Builder" + "\n" + "*Preprint, echo=NO, model=NO, history=NO, contact=NO"
				+ "\n" + "**" + "\n" + "** PARTS" + "\n" + "**" + "\n" + "*Part, name=FDM_Print" + "\n" + "*End Part"
				+ "\n" + "**" + "\n" + "**" + "\n" + "** ASSEMBLY" + "\n" + "**" + "\n" + "*Assembly, name=Assembly"
				+ "\n" + "**" + "\n" + "*Instance, name=FDM_Print-1, part=FDM_Print" + "\n" + "*Node" + "\n";

		return head;
	}

	private String writeVertices(Model model) {
		String line = "";
		for (Vertex abaqusVertex : model.getVertices()) {
			line = line + abaqusVertex.receive(writer) + "\n";
		}
		return line;
	}

	private String writeEdges(Model model) {
		String line = "";
		for (Edge abaqusEdge : model.getEdges()) {
			line = line + abaqusEdge.receive(writer) + "\n";
		}
		return line;
	}

	private String writeInLayerJoints(Model model) {
		String line = "";
		for (InLayerJoint inLayerJoint : model.getInPlaneJoints()) {
			line = line + inLayerJoint.receive(writer) + "\n";
		}
		return line;
	}

	private String writeInterLayerJoints(Model model) {
		String line = "";
		for (InterLayerJoint interLayerJoint : model.getInterLayerJoints()) {
			line = line + (interLayerJoint.receive(writer)) + "\n";
		}
		return line;
	}

	private String writeBottom() {

		String bottom = "** Section: edge  Profile: Circle" + "\n"
				+ "*Beam Section, elset=edge, material=ABS, section=CIRC" + "\n"
				//
				+ "0.25" + "\n"
				//
				+ "0.,0.,-1" + "\n"
				//
				+ "**" + "\n"
				//
				+ "** Section: inLayerJoint  Profile: Circle" + "\n"
				//
				+ "*Beam Section, elset=inLayerJoint, material=ABS, section=CIRC" + "\n"
				//
				+ "0.1" + "\n"
				//
				+ "0.,0.,-1" + "\n"
				//
				+ "** Section: interLayerJoint  Profile: Circle" + "\n"
				//
				+ "*Beam Section, elset=interLayerJoint, material=ABS, section=CIRC" + "\n"
				//
				+ "0.1" + "\n"
				//
				+ "0.,0.,-1" + "\n"
				//
				+ "*End Instance" + "\n"
				//
				+ "**" + "\n"
				//
				+ "*End Assembly" + "\n"
				//
				+ "** MATERIALS" + "\n"
				//
				+ "**" + "\n"
				//
				+ "*Material, name=ABS" + "\n"
				//
				+ "*Elastic" + "\n"
				//
				+ "1.4e+06, 0.35";
		return bottom;
	}

}
